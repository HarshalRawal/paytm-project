generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://webhook_user:webhook_password@localhost:5001/bank_web_hook_server_db"
}

// enum TransactionType {
//   credit
//   debit
// }
// model User {
//   id            String         @id @default(cuid())
//   name          String
//   email         String         @unique
//   password      String
//   phone         String
//   wallet        Wallet?
//   transactions  Transaction[]  // One-to-many relationship with Transaction
//   createdAt     DateTime       @default(now())
//   updatedAt     DateTime       @updatedAt

//   @@map("users")  // Map to `users` table in the database
// }

// model Wallet {
//   id            String         @id @default(uuid())
//   balance       Int
//   userId        String         @unique  // One-to-one relationship with User, unique constraint
//   user          User           @relation(fields: [userId], references: [id])
//   transactions  Transaction[]  // One-to-many relationship with Transaction
//   createdAt     DateTime       @default(now())
//   updatedAt     DateTime       @updatedAt

//   @@index([userId])  // Add index on `userId` field for faster lookups
//   @@map("wallets")   // Map to `wallets` table in the database
// }

// model Transaction {
//   id               String             @id @default(uuid())
//   transactionType  TransactionType    // Enum for transaction type (credit or debit)
//   status           TransactionStatus  // Enum for transaction status
//   amount           Int
//   walletId         String
//   wallet           Wallet             @relation(fields: [walletId], references: [id])
//   userId           String
//   user             User               @relation(fields: [userId], references: [id])
//   outboxes         Outbox[] 
//   createdAt        DateTime           @default(now())
//   updatedAt        DateTime           @updatedAt


//   @@index([walletId])  // Add index on `walletId` for faster lookups
//   @@index([userId])    // Add index on `userId` for faster lookups
//   @@map("transactions")  // Map to `transactions` table in the database
// }

// model Outbox {
//   id             String      @id @default(cuid())
//   transactionId  String
//   eventType      String
//   payload        Json
//   published      Boolean     @default(false)
//   createdAt      DateTime    @default(now())
//   updatedAt      DateTime    @updatedAt
//   transaction    Transaction @relation(fields: [transactionId], references: [id])
// }

// enum TransactionStatus {
//   processing
//   success
//   failed
// }

model Outbox {
  id   String   @id @default(uuid())
  eventType  eventType
  published Boolean
  Payload  Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum eventType {
  TOP_UP
  WITHDRAWAL
}